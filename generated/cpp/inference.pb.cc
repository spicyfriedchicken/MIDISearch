// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inference.proto
// Protobuf C++ Version: 5.29.3

#include "inference.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace inference {
              template <typename>
PROTOBUF_CONSTEXPR InferenceResponse_OutputMetaEntry_DoNotUse::InferenceResponse_OutputMetaEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : InferenceResponse_OutputMetaEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : InferenceResponse_OutputMetaEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct InferenceResponse_OutputMetaEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferenceResponse_OutputMetaEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferenceResponse_OutputMetaEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InferenceResponse_OutputMetaEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferenceResponse_OutputMetaEntry_DoNotUseDefaultTypeInternal _InferenceResponse_OutputMetaEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR InferenceRequest_MetadataEntry_DoNotUse::InferenceRequest_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : InferenceRequest_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : InferenceRequest_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct InferenceRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferenceRequest_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferenceRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InferenceRequest_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferenceRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InferenceRequest_MetadataEntry_DoNotUse_default_instance_;

inline constexpr InferenceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : output_meta_{},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        output_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_timestamp_{::int64_t{0}},
        status_code_{static_cast< ::inference::StatusCode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InferenceResponse::InferenceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InferenceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferenceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferenceResponseDefaultTypeInternal() {}
  union {
    InferenceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferenceResponseDefaultTypeInternal _InferenceResponse_default_instance_;

inline constexpr InferenceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        input_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InferenceRequest::InferenceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InferenceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferenceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferenceRequestDefaultTypeInternal() {}
  union {
    InferenceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferenceRequestDefaultTypeInternal _InferenceRequest_default_instance_;
}  // namespace inference
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_inference_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_inference_2eproto = nullptr;
const ::uint32_t
    TableStruct_inference_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.input_data_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.content_type_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceRequest, _impl_.request_timestamp_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse_OutputMetaEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse_OutputMetaEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.output_data_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.output_meta_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::inference::InferenceResponse, _impl_.response_timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::inference::InferenceRequest_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::inference::InferenceRequest)},
        {26, 36, -1, sizeof(::inference::InferenceResponse_OutputMetaEntry_DoNotUse)},
        {38, -1, -1, sizeof(::inference::InferenceResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::inference::_InferenceRequest_MetadataEntry_DoNotUse_default_instance_._instance,
    &::inference::_InferenceRequest_default_instance_._instance,
    &::inference::_InferenceResponse_OutputMetaEntry_DoNotUse_default_instance_._instance,
    &::inference::_InferenceResponse_default_instance_._instance,
};
const char descriptor_table_protodef_inference_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017inference.proto\022\tinference\"\351\001\n\020Inferen"
    "ceRequest\022\016\n\006job_id\030\001 \001(\t\022\022\n\nmodel_name\030"
    "\002 \001(\t\022\022\n\ninput_data\030\003 \001(\014\022;\n\010metadata\030\004 "
    "\003(\0132).inference.InferenceRequest.Metadat"
    "aEntry\022\024\n\014content_type\030\005 \001(\t\022\031\n\021request_"
    "timestamp\030\006 \001(\003\032/\n\rMetadataEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\215\002\n\021InferenceRe"
    "sponse\022\016\n\006job_id\030\001 \001(\t\022\023\n\013output_data\030\002 "
    "\001(\014\022A\n\013output_meta\030\003 \003(\0132,.inference.Inf"
    "erenceResponse.OutputMetaEntry\022*\n\013status"
    "_code\030\004 \001(\0162\025.inference.StatusCode\022\025\n\rer"
    "ror_message\030\005 \001(\t\022\032\n\022response_timestamp\030"
    "\006 \001(\003\0321\n\017OutputMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t:\0028\001*w\n\nStatusCode\022\r\n\tSTATUS"
    "_OK\020\000\022\020\n\014STATUS_ERROR\020\001\022\030\n\024STATUS_INVALI"
    "D_INPUT\020\002\022\032\n\026STATUS_MODEL_NOT_FOUND\020\003\022\022\n"
    "\016STATUS_TIMEOUT\020\0042V\n\020InferenceService\022B\n"
    "\005Infer\022\033.inference.InferenceRequest\032\034.in"
    "ference.InferenceResponseB\rZ\013inferencepb"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_inference_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_inference_2eproto = {
    false,
    false,
    768,
    descriptor_table_protodef_inference_2eproto,
    "inference.proto",
    &descriptor_table_inference_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_inference_2eproto::offsets,
    file_level_enum_descriptors_inference_2eproto,
    file_level_service_descriptors_inference_2eproto,
};
namespace inference {
const ::google::protobuf::EnumDescriptor* StatusCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_inference_2eproto);
  return file_level_enum_descriptors_inference_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StatusCode_internal_data_[] = {
    327680u, 0u, };
bool StatusCode_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              InferenceRequest_MetadataEntry_DoNotUse::InferenceRequest_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              InferenceRequest_MetadataEntry_DoNotUse::InferenceRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              InferenceRequest_MetadataEntry_DoNotUse::InferenceRequest_MetadataEntry_DoNotUse() : SuperType() {}
              InferenceRequest_MetadataEntry_DoNotUse::InferenceRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* InferenceRequest_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) InferenceRequest_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto InferenceRequest_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InferenceRequest_MetadataEntry_DoNotUse),
                                                          alignof(InferenceRequest_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull InferenceRequest_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_InferenceRequest_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &InferenceRequest_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<InferenceRequest_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &InferenceRequest_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &InferenceRequest_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &InferenceRequest_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inference_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* InferenceRequest_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> InferenceRequest_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::InferenceRequest_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "inference.InferenceRequest.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class InferenceRequest::_Internal {
 public:
};

InferenceRequest::InferenceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inference.InferenceRequest)
}
inline PROTOBUF_NDEBUG_INLINE InferenceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::inference::InferenceRequest& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        job_id_(arena, from.job_id_),
        model_name_(arena, from.model_name_),
        input_data_(arena, from.input_data_),
        content_type_(arena, from.content_type_),
        _cached_size_{0} {}

InferenceRequest::InferenceRequest(
    ::google::protobuf::Arena* arena,
    const InferenceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InferenceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_timestamp_ = from._impl_.request_timestamp_;

  // @@protoc_insertion_point(copy_constructor:inference.InferenceRequest)
}
inline PROTOBUF_NDEBUG_INLINE InferenceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        job_id_(arena),
        model_name_(arena),
        input_data_(arena),
        content_type_(arena),
        _cached_size_{0} {}

inline void InferenceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_timestamp_ = {};
}
InferenceRequest::~InferenceRequest() {
  // @@protoc_insertion_point(destructor:inference.InferenceRequest)
  SharedDtor(*this);
}
inline void InferenceRequest::SharedDtor(MessageLite& self) {
  InferenceRequest& this_ = static_cast<InferenceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.model_name_.Destroy();
  this_._impl_.input_data_.Destroy();
  this_._impl_.content_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InferenceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InferenceRequest(arena);
}
constexpr auto InferenceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.metadata_) +
          decltype(InferenceRequest::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.metadata_) +
          decltype(InferenceRequest::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InferenceRequest), alignof(InferenceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InferenceRequest::PlacementNew_,
                                 sizeof(InferenceRequest),
                                 alignof(InferenceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InferenceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InferenceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InferenceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InferenceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InferenceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InferenceRequest>(), &InferenceRequest::ByteSizeLong,
            &InferenceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_._cached_size_),
        false,
    },
    &InferenceRequest::kDescriptorMethods,
    &descriptor_table_inference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InferenceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 71, 2> InferenceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::InferenceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.job_id_)}},
    // string model_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.model_name_)}},
    // bytes input_data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.input_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string content_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.content_type_)}},
    // int64 request_timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InferenceRequest, _impl_.request_timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.request_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.job_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_name = 2;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.model_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes input_data = 3;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.input_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, string> metadata = 4;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string content_type = 5;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.content_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 request_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(InferenceRequest, _impl_.request_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(InferenceRequest()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\32\6\12\0\10\14\0\0"
    "inference.InferenceRequest"
    "job_id"
    "model_name"
    "metadata"
    "content_type"
  }},
};

PROTOBUF_NOINLINE void InferenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.job_id_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.input_data_.ClearToEmpty();
  _impl_.content_type_.ClearToEmpty();
  _impl_.request_timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InferenceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InferenceRequest& this_ = static_cast<const InferenceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InferenceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InferenceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string job_id = 1;
          if (!this_._internal_job_id().empty()) {
            const std::string& _s = this_._internal_job_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.job_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string model_name = 2;
          if (!this_._internal_model_name().empty()) {
            const std::string& _s = this_._internal_model_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.model_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes input_data = 3;
          if (!this_._internal_input_data().empty()) {
            const std::string& _s = this_._internal_input_data();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // map<string, string> metadata = 4;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.metadata");
              }
            }
          }

          // string content_type = 5;
          if (!this_._internal_content_type().empty()) {
            const std::string& _s = this_._internal_content_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceRequest.content_type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 request_timestamp = 6;
          if (this_._internal_request_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_request_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InferenceRequest::ByteSizeLong(const MessageLite& base) {
          const InferenceRequest& this_ = static_cast<const InferenceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InferenceRequest::ByteSizeLong() const {
          const InferenceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:inference.InferenceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string job_id = 1;
            if (!this_._internal_job_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_job_id());
            }
            // string model_name = 2;
            if (!this_._internal_model_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model_name());
            }
            // bytes input_data = 3;
            if (!this_._internal_input_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_input_data());
            }
            // string content_type = 5;
            if (!this_._internal_content_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content_type());
            }
            // int64 request_timestamp = 6;
            if (this_._internal_request_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_request_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InferenceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InferenceRequest*>(&to_msg);
  auto& from = static_cast<const InferenceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_job_id().empty()) {
    _this->_internal_set_job_id(from._internal_job_id());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_input_data().empty()) {
    _this->_internal_set_input_data(from._internal_input_data());
  }
  if (!from._internal_content_type().empty()) {
    _this->_internal_set_content_type(from._internal_content_type());
  }
  if (from._internal_request_timestamp() != 0) {
    _this->_impl_.request_timestamp_ = from._impl_.request_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InferenceRequest::CopyFrom(const InferenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InferenceRequest::InternalSwap(InferenceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.input_data_, &other->_impl_.input_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_type_, &other->_impl_.content_type_, arena);
        swap(_impl_.request_timestamp_, other->_impl_.request_timestamp_);
}

::google::protobuf::Metadata InferenceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              InferenceResponse_OutputMetaEntry_DoNotUse::InferenceResponse_OutputMetaEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              InferenceResponse_OutputMetaEntry_DoNotUse::InferenceResponse_OutputMetaEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              InferenceResponse_OutputMetaEntry_DoNotUse::InferenceResponse_OutputMetaEntry_DoNotUse() : SuperType() {}
              InferenceResponse_OutputMetaEntry_DoNotUse::InferenceResponse_OutputMetaEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* InferenceResponse_OutputMetaEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) InferenceResponse_OutputMetaEntry_DoNotUse(arena);
              }
              constexpr auto InferenceResponse_OutputMetaEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InferenceResponse_OutputMetaEntry_DoNotUse),
                                                          alignof(InferenceResponse_OutputMetaEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull InferenceResponse_OutputMetaEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_InferenceResponse_OutputMetaEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &InferenceResponse_OutputMetaEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<InferenceResponse_OutputMetaEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &InferenceResponse_OutputMetaEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &InferenceResponse_OutputMetaEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &InferenceResponse_OutputMetaEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inference_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* InferenceResponse_OutputMetaEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> InferenceResponse_OutputMetaEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::InferenceResponse_OutputMetaEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse_OutputMetaEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\3\5\0\0\0\0\0"
    "inference.InferenceResponse.OutputMetaEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class InferenceResponse::_Internal {
 public:
};

InferenceResponse::InferenceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inference.InferenceResponse)
}
inline PROTOBUF_NDEBUG_INLINE InferenceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::inference::InferenceResponse& from_msg)
      : output_meta_{visibility, arena, from.output_meta_},
        job_id_(arena, from.job_id_),
        output_data_(arena, from.output_data_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

InferenceResponse::InferenceResponse(
    ::google::protobuf::Arena* arena,
    const InferenceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InferenceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, response_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, response_timestamp_),
           offsetof(Impl_, status_code_) -
               offsetof(Impl_, response_timestamp_) +
               sizeof(Impl_::status_code_));

  // @@protoc_insertion_point(copy_constructor:inference.InferenceResponse)
}
inline PROTOBUF_NDEBUG_INLINE InferenceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : output_meta_{visibility, arena},
        job_id_(arena),
        output_data_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void InferenceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, response_timestamp_),
           0,
           offsetof(Impl_, status_code_) -
               offsetof(Impl_, response_timestamp_) +
               sizeof(Impl_::status_code_));
}
InferenceResponse::~InferenceResponse() {
  // @@protoc_insertion_point(destructor:inference.InferenceResponse)
  SharedDtor(*this);
}
inline void InferenceResponse::SharedDtor(MessageLite& self) {
  InferenceResponse& this_ = static_cast<InferenceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.output_data_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InferenceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InferenceResponse(arena);
}
constexpr auto InferenceResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.output_meta_) +
          decltype(InferenceResponse::_impl_.output_meta_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.output_meta_) +
          decltype(InferenceResponse::_impl_.output_meta_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InferenceResponse), alignof(InferenceResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InferenceResponse::PlacementNew_,
                                 sizeof(InferenceResponse),
                                 alignof(InferenceResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InferenceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InferenceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InferenceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InferenceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InferenceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InferenceResponse>(), &InferenceResponse::ByteSizeLong,
            &InferenceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_._cached_size_),
        false,
    },
    &InferenceResponse::kDescriptorMethods,
    &descriptor_table_inference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InferenceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 66, 2> InferenceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::InferenceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.job_id_)}},
    // bytes output_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.output_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .inference.StatusCode status_code = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InferenceResponse, _impl_.status_code_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.status_code_)}},
    // string error_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.error_message_)}},
    // int64 response_timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InferenceResponse, _impl_.response_timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.response_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.job_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes output_data = 2;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.output_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, string> output_meta = 3;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.output_meta_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .inference.StatusCode status_code = 4;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string error_message = 5;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 response_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.response_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(InferenceResponse()._impl_.output_meta_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\6\0\13\0\15\0\0"
    "inference.InferenceResponse"
    "job_id"
    "output_meta"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void InferenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.output_meta_.Clear();
  _impl_.job_id_.ClearToEmpty();
  _impl_.output_data_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.response_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_code_) -
      reinterpret_cast<char*>(&_impl_.response_timestamp_)) + sizeof(_impl_.status_code_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InferenceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InferenceResponse& this_ = static_cast<const InferenceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InferenceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InferenceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string job_id = 1;
          if (!this_._internal_job_id().empty()) {
            const std::string& _s = this_._internal_job_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.job_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes output_data = 2;
          if (!this_._internal_output_data().empty()) {
            const std::string& _s = this_._internal_output_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // map<string, string> output_meta = 3;
          if (!this_._internal_output_meta().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_output_meta();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.output_meta");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.output_meta");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.output_meta");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.output_meta");
              }
            }
          }

          // .inference.StatusCode status_code = 4;
          if (this_._internal_status_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status_code(), target);
          }

          // string error_message = 5;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.InferenceResponse.error_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 response_timestamp = 6;
          if (this_._internal_response_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_response_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InferenceResponse::ByteSizeLong(const MessageLite& base) {
          const InferenceResponse& this_ = static_cast<const InferenceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InferenceResponse::ByteSizeLong() const {
          const InferenceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:inference.InferenceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> output_meta = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_meta_size());
              for (const auto& entry : this_._internal_output_meta()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string job_id = 1;
            if (!this_._internal_job_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_job_id());
            }
            // bytes output_data = 2;
            if (!this_._internal_output_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_output_data());
            }
            // string error_message = 5;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // int64 response_timestamp = 6;
            if (this_._internal_response_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_response_timestamp());
            }
            // .inference.StatusCode status_code = 4;
            if (this_._internal_status_code() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InferenceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InferenceResponse*>(&to_msg);
  auto& from = static_cast<const InferenceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.output_meta_.MergeFrom(from._impl_.output_meta_);
  if (!from._internal_job_id().empty()) {
    _this->_internal_set_job_id(from._internal_job_id());
  }
  if (!from._internal_output_data().empty()) {
    _this->_internal_set_output_data(from._internal_output_data());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_response_timestamp() != 0) {
    _this->_impl_.response_timestamp_ = from._impl_.response_timestamp_;
  }
  if (from._internal_status_code() != 0) {
    _this->_impl_.status_code_ = from._impl_.status_code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InferenceResponse::CopyFrom(const InferenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InferenceResponse::InternalSwap(InferenceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.output_meta_.InternalSwap(&other->_impl_.output_meta_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_data_, &other->_impl_.output_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.status_code_)
      + sizeof(InferenceResponse::_impl_.status_code_)
      - PROTOBUF_FIELD_OFFSET(InferenceResponse, _impl_.response_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.response_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.response_timestamp_));
}

::google::protobuf::Metadata InferenceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace inference
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_inference_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
